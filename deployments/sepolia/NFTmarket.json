{
  "address": "0xdbE059c9EF62688D65b535e11db2d28f7A4A29F5",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "NFTmarket_AlreadyListed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NFTmarket_NoProceeds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NFTmarket_NotApproved",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "NFTmarket_NotEnoughPrice",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "NFTmarket_NotListed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "token",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "NFTmarket_NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NFTmarket_PriceCannotBeZero",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "proceeds",
          "type": "uint256"
        }
      ],
      "name": "NFTmarket_transferFailed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "ItemBought",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ItemCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ItemListed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "buyItem",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "cancelListing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getListing",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct NFTmarket.Listing",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProceeds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "listItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "updateListing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4299c03c3119785d8ba93837779391cb505a11ff03cf4cebe068194ced69b2b5",
  "receipt": {
    "to": null,
    "from": "0x1408a8B6e333510b951EA7228Be61f188326Db76",
    "contractAddress": "0xdbE059c9EF62688D65b535e11db2d28f7A4A29F5",
    "transactionIndex": 80,
    "gasUsed": "1259097",
    "logsBloom": "0x
    "blockHash": "0xd059ee2a20d0fc9f1b1e084395a232146a80a5b2592de15d546096bbd40587ae",
    "transactionHash": "0x4299c03c3119785d8ba93837779391cb505a11ff03cf4cebe068194ced69b2b5",
    "logs": [],
    "blockNumber": 6153248,
    "cumulativeGasUsed": "13796976",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "3aae6435bdb92959cfca030d5f313da0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"NFTmarket_AlreadyListed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NFTmarket_NoProceeds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NFTmarket_NotApproved\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"NFTmarket_NotEnoughPrice\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"NFTmarket_NotListed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"NFTmarket_NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NFTmarket_PriceCannotBeZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"proceeds\",\"type\":\"uint256\"}],\"name\":\"NFTmarket_transferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"ItemBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ItemCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ItemListed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"buyItem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"cancelListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getListing\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct NFTmarket.Listing\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProceeds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"listItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"updateListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTmarket.sol\":\"NFTmarket\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"},\"contracts/NFTmarket.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\r\\npragma solidity 0.8.25;\\r\\nimport  \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\r\\n\\r\\n/*\\r\\n1.listing\\r\\n2.buying\\r\\n3.updating price\\r\\n4.delete listing\\r\\n5.withdraw proceeds\\r\\n */\\r\\nerror NFTmarket_PriceCannotBeZero();\\r\\nerror NFTmarket_NotApproved();\\r\\nerror NFTmarket_AlreadyListed(address nft,uint256 tokenId);\\r\\nerror NFTmarket_NotListed(address nft,uint256 tokenId);\\r\\n\\r\\nerror NFTmarket_NotOwner(address nft,uint256 token,address owner);\\r\\nerror NFTmarket_NotEnoughPrice(uint256 value,address sender);\\r\\nerror NFTmarket_transferFailed(address sender,uint256 proceeds);\\r\\nerror NFTmarket_NoProceeds();\\r\\ncontract NFTmarket{\\r\\n    //contract  variables\\r\\n    struct Listing{\\r\\n        address seller;\\r\\n        uint256 price;\\r\\n\\r\\n    }\\r\\n    mapping(address=>mapping(uint256 => Listing)) private s_listings;\\r\\n    mapping(address=>uint256) private s_proceeds;\\r\\n    //events\\r\\n    event ItemListed(address indexed nft, uint256 indexed tokenId, uint256 price,address sender);\\r\\n    event ItemBought(address indexed nftAddress,uint256 indexed tokenId,uint256 price,address buyer);\\r\\n    event ItemCanceled(address indexed nftAddress,uint256  indexed tokenId  );  \\r\\n    \\r\\n    //constructor\\r\\n\\r\\n    //modifiers\\r\\n    modifier alreadyListed(address nft,uint256 tokenId) {\\r\\n        Listing memory listing = s_listings[nft][tokenId];\\r\\n\\r\\n        if(listing.price>0){\\r\\n            revert NFTmarket_AlreadyListed(nft,tokenId);\\r\\n        }\\r\\n        _;\\r\\n\\r\\n    }\\r\\n    modifier isListed(address nft,uint256 tokenId) {\\r\\n        Listing memory listing = s_listings[nft][tokenId];\\r\\n\\r\\n        if(listing.price<=0){\\r\\n            revert NFTmarket_NotListed(nft,tokenId);\\r\\n        }\\r\\n        _;\\r\\n\\r\\n    }\\r\\n    modifier isOwner(address nftAdd,uint256 tokenId,address owner){\\r\\n        IERC721 nft = IERC721(nftAdd);\\r\\n        if(nft.ownerOf(tokenId) != owner){\\r\\n            revert NFTmarket_NotOwner(nftAdd,tokenId,owner);\\r\\n        }\\r\\n        _;\\r\\n            \\r\\n        }\\r\\n    \\r\\n    //main functions\\r\\n    function listItem(address nftAddress,uint256 tokenId,uint256 price) isOwner(nftAddress,tokenId,msg.sender) alreadyListed(nftAddress,tokenId) external {\\r\\n        if(price<=0){\\r\\n            revert NFTmarket_PriceCannotBeZero();\\r\\n        }\\r\\n        IERC721 nft = IERC721(nftAddress);\\r\\n        if(nft.getApproved(tokenId)!= address(this)){\\r\\n            revert NFTmarket_NotApproved();\\r\\n        }\\r\\n        s_listings[nftAddress][tokenId] = Listing(msg.sender,price);\\r\\n        emit ItemListed(nftAddress,tokenId,price,msg.sender);\\r\\n    }\\r\\n\\r\\n    function buyItem(address nftAddress,uint256 tokenId)   isListed(nftAddress,tokenId) public payable{\\r\\n        Listing memory listing = s_listings[nftAddress][tokenId];\\r\\n        if(msg.value<listing.price){\\r\\n            revert NFTmarket_NotEnoughPrice(msg.value,msg.sender);\\r\\n        }\\r\\n        s_proceeds[listing.seller] = s_proceeds[listing.seller] + msg.value;\\r\\n        delete s_listings[nftAddress][tokenId];\\r\\n        IERC721 nft = IERC721(nftAddress);\\r\\n        nft.safeTransferFrom(listing.seller,msg.sender,tokenId);\\r\\n        emit ItemBought(nftAddress,tokenId,msg.value,msg.sender);\\r\\n\\r\\n\\r\\n    }\\r\\n\\r\\n    function cancelListing(address nftAddress,uint256 tokenId) external isListed(nftAddress,tokenId) isOwner(nftAddress,tokenId,msg.sender) {\\r\\n        delete s_listings[nftAddress][tokenId];\\r\\n        emit ItemCanceled(nftAddress,tokenId  );  \\r\\n    }\\r\\n\\r\\n    function updateListing(address nftAddress,uint256 tokenId,uint256 price) external isListed(nftAddress,tokenId) isOwner(nftAddress,tokenId,msg.sender){\\r\\n        if(price<=0){\\r\\n            revert NFTmarket_PriceCannotBeZero();\\r\\n        }\\r\\n        s_listings[nftAddress][tokenId].price =price;\\r\\n        emit ItemListed(nftAddress,tokenId,price,msg.sender);\\r\\n    }\\r\\n\\r\\n    function withdraw() external payable{\\r\\n        uint256 proceeds = s_proceeds[msg.sender];\\r\\n        if(proceeds==0){\\r\\n            revert NFTmarket_NoProceeds();\\r\\n        }\\r\\n        delete (s_proceeds[msg.sender]);\\r\\n        (bool send,) = payable(msg.sender).call{value:proceeds}(\\\"\\\");\\r\\n        if(!send){\\r\\n            revert NFTmarket_transferFailed(msg.sender,proceeds);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //view functions\\r\\n    \\r\\n    function getListing(address nft,uint256 id) view external returns(Listing memory)\\r\\n    {\\r\\n        return s_listings[nft][id];\\r\\n    }\\r\\n\\r\\n    function getProceeds() external view returns(uint256){\\r\\n        return s_proceeds[msg.sender];\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xea4e262114f4c4cda89396bc7ebc083dcaef0db33f8afba6c0e7486e6f5c5ab0\",\"license\":\"SEE LICENSE IN LICENSE\"}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b506115e78061001f6000396000f3fe6080604052600436106100705760003560e01c806389bfd38f1161004e57806389bfd38f146100e75780639f37092a14610110578063b2ddee061461012c578063f772adf11461015557610070565b80633ccfd60b1461007557806383bd95871461007f57806388700d1c146100aa575b600080fd5b61007d61017e565b005b34801561008b57600080fd5b506100946102f3565b6040516100a19190611252565b60405180910390f35b3480156100b657600080fd5b506100d160048036038101906100cc91906112fc565b61033a565b6040516100de9190611389565b60405180910390f35b3480156100f357600080fd5b5061010e600480360381019061010991906113a4565b610404565b005b61012a600480360381019061012591906112fc565b61084e565b005b34801561013857600080fd5b50610153600480360381019061014e91906112fc565b610c4b565b005b34801561016157600080fd5b5061017c600480360381019061017791906113a4565b610f1b565b005b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081036101fc576040517f4f8577a200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905560003373ffffffffffffffffffffffffffffffffffffffff168260405161026590611428565b60006040518083038185875af1925050503d80600081146102a2576040519150601f19603f3d011682016040523d82523d6000602084013e6102a7565b606091505b50509050806102ef5733826040517fade7aacf0000000000000000000000000000000000000000000000000000000081526004016102e692919061144c565b60405180910390fd5b5050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b610342611209565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050905092915050565b82823360008390508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b815260040161045c9190611252565b602060405180830381865afa158015610479573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049d919061148a565b73ffffffffffffffffffffffffffffffffffffffff16146104f9578383836040517fbe930e140000000000000000000000000000000000000000000000000000000081526004016104f0939291906114b7565b60405180910390fd5b868660008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505090506000816020015111156106055782826040517f9f1fb0510000000000000000000000000000000000000000000000000000000081526004016105fc92919061144c565b60405180910390fd5b6000881161063f576040517f6a35a83900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008a90503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc8c6040518263ffffffff1660e01b81526004016106949190611252565b602060405180830381865afa1580156106b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d5919061148a565b73ffffffffffffffffffffffffffffffffffffffff1614610722576040517f47e2bd3300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180604001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018a8152506000808d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155905050898b73ffffffffffffffffffffffffffffffffffffffff167ff72a1a7f0543c16546019eb0a601ab3e64090c3eec1a7f6479355bf2e9f49c498b336040516108399291906114ee565b60405180910390a35050505050505050505050565b818160008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050905060008160200151116109595782826040517fe3bcbe7700000000000000000000000000000000000000000000000000000000815260040161095092919061144c565b60405180910390fd5b60008060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008681526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505090508060200151341015610a625734336040517f11e0d94c000000000000000000000000000000000000000000000000000000008152600401610a599291906114ee565b60405180910390fd5b3460016000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ab19190611546565b60016000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160009055505060008690508073ffffffffffffffffffffffffffffffffffffffff166342842e0e836000015133896040518463ffffffff1660e01b8152600401610bbf9392919061157a565b600060405180830381600087803b158015610bd957600080fd5b505af1158015610bed573d6000803e3d6000fd5b50505050858773ffffffffffffffffffffffffffffffffffffffff167fb03f92a114afd6f0d9b0dc2b572bd8abbd11540e53119b0c574034469bd50d243433604051610c3a9291906114ee565b60405180910390a350505050505050565b818160008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505090506000816020015111610d565782826040517fe3bcbe77000000000000000000000000000000000000000000000000000000008152600401610d4d92919061144c565b60405180910390fd5b84843360008390508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401610dae9190611252565b602060405180830381865afa158015610dcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610def919061148a565b73ffffffffffffffffffffffffffffffffffffffff1614610e4b578383836040517fbe930e14000000000000000000000000000000000000000000000000000000008152600401610e42939291906114b7565b60405180910390fd5b6000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000898152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090555050878973ffffffffffffffffffffffffffffffffffffffff167ff86e54241e209ee4b38db8e64af9614b083d18f23c32f3293c8a87c6b8bf894360405160405180910390a3505050505050505050565b828260008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050905060008160200151116110265782826040517fe3bcbe7700000000000000000000000000000000000000000000000000000000815260040161101d92919061144c565b60405180910390fd5b85853360008390508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b815260040161107e9190611252565b602060405180830381865afa15801561109b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110bf919061148a565b73ffffffffffffffffffffffffffffffffffffffff161461111b578383836040517fbe930e14000000000000000000000000000000000000000000000000000000008152600401611112939291906114b7565b60405180910390fd5b60008811611155576040517f6a35a83900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876000808c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b815260200190815260200160002060010181905550888a73ffffffffffffffffffffffffffffffffffffffff167ff72a1a7f0543c16546019eb0a601ab3e64090c3eec1a7f6479355bf2e9f49c498a336040516111f59291906114ee565b60405180910390a350505050505050505050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000819050919050565b61124c81611239565b82525050565b60006020820190506112676000830184611243565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061129d82611272565b9050919050565b6112ad81611292565b81146112b857600080fd5b50565b6000813590506112ca816112a4565b92915050565b6112d981611239565b81146112e457600080fd5b50565b6000813590506112f6816112d0565b92915050565b600080604083850312156113135761131261126d565b5b6000611321858286016112bb565b9250506020611332858286016112e7565b9150509250929050565b61134581611292565b82525050565b61135481611239565b82525050565b604082016000820151611370600085018261133c565b506020820151611383602085018261134b565b50505050565b600060408201905061139e600083018461135a565b92915050565b6000806000606084860312156113bd576113bc61126d565b5b60006113cb868287016112bb565b93505060206113dc868287016112e7565b92505060406113ed868287016112e7565b9150509250925092565b600081905092915050565b50565b60006114126000836113f7565b915061141d82611402565b600082019050919050565b600061143382611405565b9150819050919050565b61144681611292565b82525050565b6000604082019050611461600083018561143d565b61146e6020830184611243565b9392505050565b600081519050611484816112a4565b92915050565b6000602082840312156114a05761149f61126d565b5b60006114ae84828501611475565b91505092915050565b60006060820190506114cc600083018661143d565b6114d96020830185611243565b6114e6604083018461143d565b949350505050565b60006040820190506115036000830185611243565b611510602083018461143d565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061155182611239565b915061155c83611239565b925082820190508082111561157457611573611517565b5b92915050565b600060608201905061158f600083018661143d565b61159c602083018561143d565b6115a96040830184611243565b94935050505056fea2646970667358221220f9744af5c731abe56241ebd08beef3a55dc8cf0867a2f727a552d4ee605ec8e764736f6c63430008190033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c806389bfd38f1161004e57806389bfd38f146100e75780639f37092a14610110578063b2ddee061461012c578063f772adf11461015557610070565b80633ccfd60b1461007557806383bd95871461007f57806388700d1c146100aa575b600080fd5b61007d61017e565b005b34801561008b57600080fd5b506100946102f3565b6040516100a19190611252565b60405180910390f35b3480156100b657600080fd5b506100d160048036038101906100cc91906112fc565b61033a565b6040516100de9190611389565b60405180910390f35b3480156100f357600080fd5b5061010e600480360381019061010991906113a4565b610404565b005b61012a600480360381019061012591906112fc565b61084e565b005b34801561013857600080fd5b50610153600480360381019061014e91906112fc565b610c4b565b005b34801561016157600080fd5b5061017c600480360381019061017791906113a4565b610f1b565b005b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081036101fc576040517f4f8577a200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905560003373ffffffffffffffffffffffffffffffffffffffff168260405161026590611428565b60006040518083038185875af1925050503d80600081146102a2576040519150601f19603f3d011682016040523d82523d6000602084013e6102a7565b606091505b50509050806102ef5733826040517fade7aacf0000000000000000000000000000000000000000000000000000000081526004016102e692919061144c565b60405180910390fd5b5050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b610342611209565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050905092915050565b82823360008390508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b815260040161045c9190611252565b602060405180830381865afa158015610479573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049d919061148a565b73ffffffffffffffffffffffffffffffffffffffff16146104f9578383836040517fbe930e140000000000000000000000000000000000000000000000000000000081526004016104f0939291906114b7565b60405180910390fd5b868660008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505090506000816020015111156106055782826040517f9f1fb0510000000000000000000000000000000000000000000000000000000081526004016105fc92919061144c565b60405180910390fd5b6000881161063f576040517f6a35a83900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008a90503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc8c6040518263ffffffff1660e01b81526004016106949190611252565b602060405180830381865afa1580156106b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d5919061148a565b73ffffffffffffffffffffffffffffffffffffffff1614610722576040517f47e2bd3300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180604001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018a8152506000808d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155905050898b73ffffffffffffffffffffffffffffffffffffffff167ff72a1a7f0543c16546019eb0a601ab3e64090c3eec1a7f6479355bf2e9f49c498b336040516108399291906114ee565b60405180910390a35050505050505050505050565b818160008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050905060008160200151116109595782826040517fe3bcbe7700000000000000000000000000000000000000000000000000000000815260040161095092919061144c565b60405180910390fd5b60008060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008681526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505090508060200151341015610a625734336040517f11e0d94c000000000000000000000000000000000000000000000000000000008152600401610a599291906114ee565b60405180910390fd5b3460016000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ab19190611546565b60016000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160009055505060008690508073ffffffffffffffffffffffffffffffffffffffff166342842e0e836000015133896040518463ffffffff1660e01b8152600401610bbf9392919061157a565b600060405180830381600087803b158015610bd957600080fd5b505af1158015610bed573d6000803e3d6000fd5b50505050858773ffffffffffffffffffffffffffffffffffffffff167fb03f92a114afd6f0d9b0dc2b572bd8abbd11540e53119b0c574034469bd50d243433604051610c3a9291906114ee565b60405180910390a350505050505050565b818160008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505090506000816020015111610d565782826040517fe3bcbe77000000000000000000000000000000000000000000000000000000008152600401610d4d92919061144c565b60405180910390fd5b84843360008390508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401610dae9190611252565b602060405180830381865afa158015610dcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610def919061148a565b73ffffffffffffffffffffffffffffffffffffffff1614610e4b578383836040517fbe930e14000000000000000000000000000000000000000000000000000000008152600401610e42939291906114b7565b60405180910390fd5b6000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000898152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090555050878973ffffffffffffffffffffffffffffffffffffffff167ff86e54241e209ee4b38db8e64af9614b083d18f23c32f3293c8a87c6b8bf894360405160405180910390a3505050505050505050565b828260008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050905060008160200151116110265782826040517fe3bcbe7700000000000000000000000000000000000000000000000000000000815260040161101d92919061144c565b60405180910390fd5b85853360008390508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b815260040161107e9190611252565b602060405180830381865afa15801561109b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110bf919061148a565b73ffffffffffffffffffffffffffffffffffffffff161461111b578383836040517fbe930e14000000000000000000000000000000000000000000000000000000008152600401611112939291906114b7565b60405180910390fd5b60008811611155576040517f6a35a83900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876000808c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b815260200190815260200160002060010181905550888a73ffffffffffffffffffffffffffffffffffffffff167ff72a1a7f0543c16546019eb0a601ab3e64090c3eec1a7f6479355bf2e9f49c498a336040516111f59291906114ee565b60405180910390a350505050505050505050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000819050919050565b61124c81611239565b82525050565b60006020820190506112676000830184611243565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061129d82611272565b9050919050565b6112ad81611292565b81146112b857600080fd5b50565b6000813590506112ca816112a4565b92915050565b6112d981611239565b81146112e457600080fd5b50565b6000813590506112f6816112d0565b92915050565b600080604083850312156113135761131261126d565b5b6000611321858286016112bb565b9250506020611332858286016112e7565b9150509250929050565b61134581611292565b82525050565b61135481611239565b82525050565b604082016000820151611370600085018261133c565b506020820151611383602085018261134b565b50505050565b600060408201905061139e600083018461135a565b92915050565b6000806000606084860312156113bd576113bc61126d565b5b60006113cb868287016112bb565b93505060206113dc868287016112e7565b92505060406113ed868287016112e7565b9150509250925092565b600081905092915050565b50565b60006114126000836113f7565b915061141d82611402565b600082019050919050565b600061143382611405565b9150819050919050565b61144681611292565b82525050565b6000604082019050611461600083018561143d565b61146e6020830184611243565b9392505050565b600081519050611484816112a4565b92915050565b6000602082840312156114a05761149f61126d565b5b60006114ae84828501611475565b91505092915050565b60006060820190506114cc600083018661143d565b6114d96020830185611243565b6114e6604083018461143d565b949350505050565b60006040820190506115036000830185611243565b611510602083018461143d565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061155182611239565b915061155c83611239565b925082820190508082111561157457611573611517565b5b92915050565b600060608201905061158f600083018661143d565b61159c602083018561143d565b6115a96040830184611243565b94935050505056fea2646970667358221220f9744af5c731abe56241ebd08beef3a55dc8cf0867a2f727a552d4ee605ec8e764736f6c63430008190033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 181,
        "contract": "contracts/NFTmarket.sol:NFTmarket",
        "label": "s_listings",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)174_storage))"
      },
      {
        "astId": 185,
        "contract": "contracts/NFTmarket.sol:NFTmarket",
        "label": "s_proceeds",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)174_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct NFTmarket.Listing))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(Listing)174_storage)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Listing)174_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct NFTmarket.Listing)",
        "numberOfBytes": "32",
        "value": "t_struct(Listing)174_storage"
      },
      "t_struct(Listing)174_storage": {
        "encoding": "inplace",
        "label": "struct NFTmarket.Listing",
        "members": [
          {
            "astId": 171,
            "contract": "contracts/NFTmarket.sol:NFTmarket",
            "label": "seller",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 173,
            "contract": "contracts/NFTmarket.sol:NFTmarket",
            "label": "price",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}